{%- doc -%}
  Intended for use in a block similar to the text block.

  @param {string} [class] - custom class to define in addition to text-block classes
  @param {string} [fallback_text] - fallback text if settings.text does not exist
  @param {string} [width] - width of the text block
  @param {object} block - block object
{%- enddoc -%}

{% stylesheet %}
  :root {
    --text-align-default: left;
  }

  [style*='--horizontal-alignment: center'] .text-block {
    --text-align-default: center;
  }

  [style*='--horizontal-alignment: flex-end'] .text-block {
    --text-align-default: right;
  }

  [style*='--horizontal-alignment: flex-start'] > .text-block {
    --text-align-default: left;
  }

  [style*='--horizontal-alignment: center'] > .text-block {
    --text-align-default: center;
  }

  [style*='--horizontal-alignment: flex-end'] > .text-block {
    --text-align-default: right;
  }

  .text-block {
    max-width: 100%;
    display: flex;
    flex-direction: column;
    align-items: var(--horizontal-alignment);
  }

  .text-block,
  .text-block > * {
    width: var(--width);
    text-align: var(--text-align, var(--text-align-default));
    text-wrap: var(--text-wrap);
  }

  .text-block:not(.text-block--full-width).rte,
  .text-block:not(.text-block--full-width).paragraph {
    /* Safari doesn't support pretty, so fallback to balance */
    text-wrap: balance;
    text-wrap: pretty;
  }

  .text-block:not(.text-block--full-width):is(.h1, .h2, .h3, .h4, .h5, .h6) {
    text-wrap: balance;
  }

  /* Hide underline unless text is using paragraph styles. */
  .text-block:is(.h1, .h2, .h3, .h4, .h5, .h6) a {
    text-decoration-color: transparent;
  }

  .text-block,
  .text-block > :is(h1, h2, h3, h4, h5, h6, p, *) {
    color: var(--color-text);
    font-size: var(--font-size-text);
    line-height: var(--text-line-height);
    font-weight: var(--font-weight-text);
    max-width: var(--cus-width-text);
    overflow-wrap: break-word;
    margin-top: 0;
    margin-bottom: 0;

    @media (max-width: 1024px) {
      font-size: var(--font-size-text-mb);
    }
  }

  .text-block > *:first-child {
    margin-block-start: 0;
  }

  .text-block > *:last-child {
    margin-block-end: 0;
  }

  .text-block > * + * {
    margin-top: 2rem;
  }

  .text-block--align-center,
  .text-block--align-center > * {
    margin-inline: auto;
  }

  .text-block--align-right,
  .text-block--align-right > * {
    margin-inline-start: auto;
  }

  .text-block--background {
    background-color: var(--text-background-color);
    border-radius: var(--text-corner-radius);
  }
{% endstylesheet %}

{% liquid
  assign plain_text = block.settings.text | strip_newlines | strip_html | strip

  capture text_block_classes
    echo 'text-block--align-' | append: block.settings.alignment
    if block.settings.background
      echo ' text-block--background '
    endif
  endcapture
%}

{% capture attributes %}
  class="{{ class }} spacing-style text-block text-block--{{ block.id }}{% if settings.banner_animation == 'effect_fade_up' %} scroll-trigger animate--slide-in{% endif %}
    {{ text_block_classes }}
  "

  style="
    {% render 'spacing-padding', settings: block.settings %}
    {% if block.settings.background %}
      --text-background-color: {{ block.settings.background_color | default: 'rgb(255 255 255 / 1.0)' }};
      --text-corner-radius: {{ block.settings.corner_radius }}px;
      --text-padding: max(var(--padding-2xs), calc((var(--text-corner-radius) + var(--padding-xs)) * (1 - cos(45deg))));
    {% endif %}

    --color-text: {{ block.settings.text_color }};
    --font-size-text: {{ block.settings.text_size | append: 'px' }};
    --font-size-text-mb: {{ block.settings.text_size_mb | append: 'px' }};
    --font-weight-text: {{ block.settings.text_font_weight }};
    --cus-width-text: {{ block.settings.text_width }};
    --text-line-height: {{ block.settings.text_line_height }};
  "

  {{ block.shopify_attributes }}
{% endcapture %}

<div {{ attributes }}>
  {% if fallback_text != blank and plain_text == blank %}
    {{ fallback_text }}
  {% elsif plain_text != blank %}
    {{ block.settings.text }}
  {% endif %}
</div>